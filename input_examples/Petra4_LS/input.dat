//input file for Petra4 H6BA-v4.0

&ring
ringCircRing = 2304.E0
ringWorkQ                  = 135.18E0  86.27E0  0.00481143E0
ringWorkQ                  = 135.18E0  86.27E0  0.00481143E0
ringSynchRadDampTime       = 2310      2880      1642       // in the unit of truns
ringPipeAperatureX         = 1.0E-2                         // [m]
ringPipeAperatureY         = 1.0E-2                         // [m]
ringPipeAperatureR         = 1.0E-2                         // [m]   not used in code
ringElectronBeamEnergy     = 6.0E+9
ringAlphac                 = 3.328808e-5
ringSdelta0                = 9.277e-4
ringU0                     = 4.167E+6
&end


// Include the generator and RF setting--then the cavities paramters have to be set in this section.
&rfset
rfRingHarm        = 3840                          // harmonics number of the ring
rfResNum          = 1                             // passive HC can also be treated as RLC impedance--long range wake in time domain treatment 
rfResHarm         = 1  3                          // harm number of the cavity (normalized by ringHarm). 
rfResType         = 1  1                          // active=1, passive=0. Main cavity is always active
rfResVol          = 8.0E+6  2.22275e+6            // cavity voltage [V],   target value to be maintained.  
rfResPhase        = 0.944702  -1.80733            // cavity phase   [rad], target value to be maintained.  Cos covention. code will give warning, if U0 can not be compansated.
                                                  // if only with 1 cavity, the ideal value will be set as default  
rfResPhase        = 1.02292  -1.5707                                                  
                                                  
rfResShuntImpRs   = 81.6E+6 36.E+6                // [ohm]
rfResShuntImpRs   = 0E+6 0.E+6                    // [ohm]
rfResQualityQ0    = 29600   17000                 // unLoaded quality factor
rfResCouplingBeta = 3.0     5.3                   // coupling factor   
rfResDetuneFre    = -30.401e+3  261.44e+3         // Hz   resonatorVec[i].resHarm * ringHarmH * f0 + resonatorVec[i].resDetuneFre; if resDetuneFre>0; psi>0
rfResDetuneFre    = -0e+3  0e+3                    // Hz   resonatorVec[i].resHarm * ringHarmH * f0 + resonatorVec[i].resDetuneFre; if resDetuneFre>0; psi>0
rfTransientCavParWriteTo = rfTransientPar         // Data file to store the initial cavity and genertor setiings.
rfResCold          = 0 0                          // in tracking, cavity is cold (1) or beam induced volage is built up already (0).
rfResAmpFBRatioForTotSelfLoss  = 1 1              // The cavity FB is ideal one. This parameter determins the perstage of the total vb0/2 to be compansated by each cavities.
                                                  // Cavity FB only affect voltage amplitude right now.  With a strong triansent beam loading, can adjust these parameters
                                                  // to have an better potential well distortaion effect.
                                                  
rfBunchBinNum      =  100                         // used bin of a soft bunch in longitudinal triansent beam loading simulation, bunch bin range [minZ-rmsbunchLength,maxZ+rmsbunchLength]   
&end


// long range RW wake function  Ref. NIMA 221-230 806 (2016) Nagaoka  Eq.(26), rigid bunch approximation for long range wake simulation. 
&LongRangeWake
LRWPipeGeoInput=input_SectorGeo.dat
!LRWBBRInput=input_BBR.dat
LRWNTurnsWakeTrunction=20                                //LRWNTurnsWakeTrunction + 1 turns are taken into account in total
&end

&ShortRangeWake                                         //in SP model, the hainsinski is solved by 1ps wake potential (RW and BBR model)  
!SRWPipeGeoInput=input_SectorGeo.dat
SRWBBRInput=input_BBR.dat  
SRWWakePotenWriteTo = SRWakePotenBBR   
SRWBunchBinNum   =  100                                 // specifiy the bins number in multi-particle tracking.                                 
&end


&BoardBandImpedance
!BBIbunchBinNumberZ =100
!BBIimpedInput=input_imp.dat
&end


//it is assume that in each train, bunch gaps is fixed harmonic =1240 = 100 * (3+1) + 10 + 200 * (3+1) + 30
&filling_pattern

fpTrainNumber = 1
fptotBunchNumber = 20
fpBunchNumberPerTrain = 20 
fpTrainGaps = 0
fpBunchGaps = 191


fpTrainNumber = 40
fptotBunchNumber = 200
fpBunchNumberPerTrain = 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5
fpTrainGaps = 26 26 26 26 26 26 26 26 26 26 26 26 26 26 26 26 26 26 26 26 26 26 26 26 26 26 26 26 26 26 26 26 26 26 26 26 26 26 26 26
fpBunchGaps = 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13

fpTrainNumber = 60
fpTotBunchNumber = 1200
fpBunchNumberPerTrain = 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 
fpTrainGaps = 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 968 
fpBunchGaps = 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 


fpTrainNumber = 80
fpTotBunchNumber = 1600
fpBunchNumberPerTrain = 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20
fpTrainGaps = 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8
fpBunchGaps = 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1


fpTrainNumber = 40
fpTotBunchNumber = 800
fpBunchNumberPerTrain = 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 
fpTrainGaps = 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 1928 
fpBunchGaps = 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 

fpTrainNumber = 1
fpTotBunchNumber = 960
fpBunchNumberPerTrain = 960 
fpTrainGaps = 960 
fpBunchGaps = 2 

fpTrainNumber = 1
fpTotBunchNumber = 1600
fpBunchNumberPerTrain = 1600 
fpTrainGaps =  640
fpBunchGaps = 1 

fpTrainNumber = 1
fptotBunchNumber = 2
fpBunchNumberPerTrain = 2 
fpTrainGaps = 0
fpBunchGaps = 1919

fpTrainNumber = 1
fptotBunchNumber = 5
fpBunchNumberPerTrain = 5 
fpTrainGaps = 0
fpBunchGaps = 767



fpTrainNumber = 1
fptotBunchNumber = 2
fpBunchNumberPerTrain = 2 
fpTrainGaps = 0
fpBunchGaps = 1919


fpTrainNumber = 1
fpTotBunchNumber = 40
fpBunchNumberPerTrain = 40 
fpTrainGaps = 1920 
fpBunchGaps = 47 

fpTrainNumber = 2
fpTotBunchNumber = 200
fpBunchNumberPerTrain = 100 100  
fpTrainGaps = 320 320 
fpBunchGaps = 15 15


fpTrainNumber = 1
fptotBunchNumber = 5
fpBunchNumberPerTrain = 5 
fpTrainGaps = 0
fpBunchGaps = 767


fpTrainNumber = 1
fptotBunchNumber = 1
fpBunchNumberPerTrain = 1 
fpTrainGaps = 0
fpBunchGaps = 3839

fpTrainNumber = 1
fptotBunchNumber = 80
fpBunchNumberPerTrain = 80 
fpTrainGaps = 0
fpBunchGaps = 47

&end


&bunch
bunchCurrent         = 2.e-3
bunchEmittanceX      = 20.E-12
bunchKappa           = 0.2
bunchRmsBunchLength  = 2.3E-3
bunchRmsEnergySpread = 9.277e-4                                                   // particles are generated according to this value. x y z, px py pz ->The same as ring energy spread
bunchInitialStaticOffSet    = 0.E-4 0.E-4 0.E-4 0.E-5 0.E-5 0.E-5                 // static initial displacement error m and rad
bunchInitialDynamicOffSet   = 1.E-5 1.E-5 0.E-5 0.E-5 0.E-5 0.E-5                 // dynamic initial displacement error 1 sigma error m and rad
bunchDistributionType    = 3                                                      // 1: KV 2:WB  3:GS  For  longitudian is Gausion 3sigma truncted
bunchMacroEleNumPerBunch = 1
&end



&ion_effect
ionCalTwissInput             = twiss.dat
ionCalGasSpec                = 4
ionCalIonMassNumber          = 2  16 28 44
ionCalIongasPercent          = 0.96  0.01   0.01  0.02                                     // partial pressure percent
ionCalCorssSectionEI         = 0.35   2.1   2.0  2.92                                      // [Mb]=[2.0E-22 1/m^2] Collision crossing
ionCalIonlossboundary        = 10							                               // max(ionlossboundary * bunchEffectiveSizeXMax, PipeAperature(x,y,r)) is the ion loss criteria
ionCalIonMaxNumber           = 1.E+5
ionCalNumberofIonBeamInterPoint    = 1
ionCalMacroIonNumberGeneratedPerIP = 10
ionCalIonInfoPrintInterval   = 100
ionCalIonDisWriteTo          = WSIonDis
&end



&feed_back
fbKickStrengthKx=6.e-2
fbKickStrengthKy=6.e-2
fbKickStrengthF=1
fbGain =  1
fbDelay = 1
fbTaps  = 9
fbKickerDispP =   0
fbKickerDisp  =   0
fbFIRBunchByBunchFeedbackPowerLimit =1000                  // power wat limit on feedback
fbFIRBunchByBunchFeedbackKickerImped =123.E+3              // ohm
fbFircoeffx  =  0.3039  0.6124   0.3034   -0.1764   -0.3555  -0.1712    0.0347  -0.0811  -0.4701
fbFircoeffy  =  0.6923  0.1701  -0.5195   -0.2701    0.0343  -0.1399   -0.0406   0.2606  -0.1874
fbFircoeffz  =   0.  0.   0.   0.     0.  0.  0 0 0
fbFircoeffxy =   0.  0.   0.   0.     0.  0.  0 0 0
&end



&run
runcalSetting = 1                                              // 1: SP 2:MP 
runNTurns = 2000
runBunchInfoPrintInterval = 1

//set the bunch to be printed out
runTBTBunchPrintNum = 21                                       // data print in result.sdds -- average turn by turn and in TBTBunchDisData bunch distribution.
runTBTBunchDisDataBunchIndex = 350 355 360 365 370 375 380 385 390 395 400 405 410 415 420 425 430 435 440 445 450                      // bunch index to be printed

runTBTBunchPrintNum = 1                                       // data print in result.sdds -- average turn by turn and in TBTBunchDisData bunch distribution.
runTBTBunchDisDataBunchIndex = 0 79 99 100 199                // bunch index to be printed


runTBTBunchAverData = TBTBunchAverData
runTBTBunchDisData  = TBTBunchDisData                         // only works in strong model that calsetting=2
runTBTBunchCavVolData = TBTBunchCavVolData                    // only works in strong model that calsetting=2
!runTBTBunchHaissinski = TBTBunchHaissinski                    // only works in weak model calsetting=1 
!runTBTBunchLongTraj   = longPariTraj                          // only works in weak mode  calsetting=1, file name of the longitudinal phase trajectory 

runSynRadDampingFlag = 0                                      // only work for the transverse directoin, longitudinal is dealt in the RF cavity module                       
runBeamIonFlag = 0
runFIRBunchByBunchFeedbackFlag = 0
runLongRangeWake = 1
runShortRangeWake = 0                                           
runBBIFlag = 0                                                 // borad band impedance data read from files--frequency domain approaches. solver is not applied to code yet.  
&end






To get the coupled mode growth rate. Ref. PRAB 18, 031001 2015, Maro, M. Eq. (24). deal with the turn by turn data within a window. severl steps-- not fixed it yet. 
(1) : get the fitting A_b and \theta_b of different bunches.  
(2) : solver the A_{\mu} and  \theta_{\mu} for each mode-- requres to sovle of linear matrix.  
(3) : A_{\mu} as function of turns represents the the mode variation   



2022--04-16 When the electron bunch curent is big.  The cavity feedback scheme used not can not ensure ideal bunch lengthing.   
2022--04-16 short range wake subroutine need to be benchmaked with other codes, in time domain, RW aggree with Haisskin solutions
2022--08-10 with SP model and resistive wall, multi-bunch multi-turn tracking benchmark. Alex Eq.(4.114). Try to get the same from impedance point of view
2022--08-12 think about how to apply the quadrupole wake into the trackking. Ref. "simulation of transverse multi-bunch instability of proton beams in LHC-Eq.(2.42)" 
            Eq. (3.75 ~ 3.76) also show how to include the chromaticity in simulation.     


