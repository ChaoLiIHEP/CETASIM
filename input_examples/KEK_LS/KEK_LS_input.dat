//input file for KEK LS 

&ring
ringCircRing = 570.725.E0
ringWorkQ                  = 135.18E0  86.27E0  0.00511035
ringSynchRadDampTime       = 9362      28800      3676       // in the unit of truns
ringPipeAperatureX         = 1.0E-2                         // [m]
ringPipeAperatureY         = 1.0E-2                         // [m]
ringPipeAperatureR         = 1.0E-2                         // [m]   not used in code
ringElectronBeamEnergy     = 3.0E+9
ringAlphac                 = 2.2e-4
ringSdelta0                = 7.3e-4
ringU0                     = 0.851E+6
&end


// Include the generator and RF setting--then the cavities paramters have to be set in this section.
&rfset

rfRingHarm        = 952                          // harmonics number of the ring
rfResNum          = 2                             // passive HC can also be treated as RLC impedance--long range wake in time domain treatment 
rfResHarm         = 1  3                          // harm number of the cavity (normalized by ringHarm). 
rfResType         = 1  1                          // active=1, passive=0. Main cavity is always active
rfResVol          = 2.5E+6  0.777e+6              // cavity voltage [V],   target value to be maintained.  
rfResPhase        = 1.178  -1.708                // cavity phase   [rad], target value to be maintained.  Cos covention. code will give warning, if U0 can not be compansated.
                                                  // if only with 1 cavity, the ideal value will be set as default  
!rfResPhase        = 1.02302  -1.5707                                                  
                                                  
rfResShuntImpRs   = 35E+6  14.48E+6                // [ohm]
rfResQualityQ0    = 40000   37513                 // unLoaded quality factor
rfResCouplingBeta = 3.5     0.27                   // coupling factor   
rfResDetuneFre    = -40.3e+3  185.e+3         // Hz   resonatorVec[i].resHarm * ringHarmH * f0 + resonatorVec[i].resDetuneFre; if resDetuneFre>0; psi>0
rfTransientCavParWriteTo = rfTransientPar         // Data file to store the initial cavity and genertor setiings.
rfResCold          = 0 0                          // in tracking, if cavity is code or beam induces volage is already built up.
rfResAmpFBRatioForTotSelfLoss  = 1 1              // The cavity FB is ideal one. THis parameter determin the penstage of the total vb0/2 to be compansated by each cavities.
                                                  // Cavity FB only affect voltage amplitude right now.  With a strong triansent beam loading, can adjust these parameters
                                                  // to have an better potential well distortaion effect.
                                                  // single bunch hainssiki only works well when single bunch current is weak.
rfBunchBinNum      =  100                         // used bin of a soft bunch in longitudinal triansent beam loading simulation, bunch bin range [minZ-rmsbunchLength,maxZ+rmsbunchLength]   
&end


// long range RW wake function  Ref. NIMA 221-230 806 (2016) Nagaoka  Eq.(26), rigid bunch approximation for long range wake simulation. 
&LongRangeWake
!LRWPipeGeoInput=input_SectorGeo.dat
!LRWBBRInput=input_BBR.dat
!LRWNTurnsWakeTrunction=50
&end

&ShortRangeWake                                         //in SP model, the hainsinski is solved by 1ps wake potential (RW and BBR model)  
!SRWPipeGeoInput=input_SectorGeo.dat
SRWBBRInput=input_BBR.dat  
SRWWakePotenWriteTo = SRWakePotenBBR   
SRWBunchBinNum   =  100                                 // specifiy the bins number in multi-particle tracking.                                 
&end


&BoardBandImpedance
!BBIbunchBinNumberZ =100
!BBIimpedInput=input_imp.dat
&end


//it is assume that in each train, bunch gaps is fixed harmonic =1240 = 100 * (3+1) + 10 + 200 * (3+1) + 30
&filling_pattern

fpTrainNumber = 1
fpTotBunchNumber = 952
fpBunchNumberPerTrain = 952  
fpTrainGaps = 0 
fpBunchGaps = 0

fpTrainNumber = 2
fpTotBunchNumber = 892
fpBunchNumberPerTrain = 446 446  
fpTrainGaps = 30 30 
fpBunchGaps = 0 0

&end


&end

&bunch
bunchCurrent         = 1.25e-04
bunchEmittanceX      = 20.E-12
bunchKappa           = 0.2
bunchRmsBunchLength  = 2.85E-3
bunchRmsEnergySpread = 7.3e-4                                                    // particles are generated according to this value. x y z, px py pz ->The same as ring energy spread
bunchInitialStaticOffSet    = 0.E-5 0.E-5 0.E-5 0.E-5 0.E-5 0.E-5                 // static initial displacement error m and rad
bunchInitialDynamicOffSet   = 0.E-6 0.E-6 0.E-5 0.E-5 0.E-5 0.E-5                 // dynamic initial displacement error 1 sigma error m and rad
bunchDistributionType    = 3                                                      // 1: KV 2:WB  3:GS  For  longitudian is Gausion 3sigma truncted
bunchMacroEleNumPerBunch = 1
&end



&ion_effect
ionCalTwissInput             = twiss.dat
ionCalGasSpec                = 4
ionCalIonMassNumber          = 2  16 28 44
ionCalIongasPercent          = 0.96  0.01   0.01  0.02                                     // partial pressure percent
ionCalCorssSectionEI         = 0.35   2.1   2.0  2.92                                      // [Mb]=[2.0E-22 1/m^2] Collision crossing
ionCalIonlossboundary        = 10							                               // max(ionlossboundary * bunchEffectiveSizeXMax, PipeAperature(x,y,r)) is the ion loss criteria
ionCalIonMaxNumber           = 1.E+5
ionCalNumberofIonBeamInterPoint   = 1
ionCalMacroIonNumberGeneratedPerIP = 10
ionCalIonInfoPrintInterval   = 100
ionCalIonDisWriteTo          = WSIonDis
&end



&feed_back
fbKickStrengthKx=6.e-2
fbKickStrengthKy=6.e-2
fbKickStrengthF=1
fbGain =  1
fbDelay = 1
fbTaps  = 9
fbKickerDispP =   0
fbKickerDisp  =   0
fbFIRBunchByBunchFeedbackPowerLimit =1000                  // power wat limit on feedback
fbFIRBunchByBunchFeedbackKickerImped =123.E+3              // ohm
fbFircoeffx  =  0.3039  0.6124   0.3034   -0.1764   -0.3555  -0.1712    0.0347  -0.0811  -0.4701
fbFircoeffy  =  0.6923  0.1701  -0.5195   -0.2701    0.0343  -0.1399   -0.0406   0.2606  -0.1874
fbFircoeffz  =   0.  0.   0.   0.     0.  0.  0 0 0
fbFircoeffxy =   0.  0.   0.   0.     0.  0.  0 0 0
&end



&run
runcalSetting = 1                                              // 1: SP 2:MP 
runNTurns = 2000
runBunchInfoPrintInterval = 100



runTBTBunchPrintNum = 1                                        // data print in result.sdds -- average turn by turn and in TBTBunchDisData bunch distribution.
runTBTBunchDisDataBunchIndex = 0                               // bunch index to be printed

//set the bunch to be printed out
runTBTBunchPrintNum = 20                                       // data print in result.sdds -- average turn by turn and in TBTBunchDisData bunch distribution.
runTBTBunchDisDataBunchIndex = 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19                      // bunch index to be printed

//set the bunch to be printed out
runTBTBunchPrintNum = 21                                       // data print in result.sdds -- average turn by turn and in TBTBunchDisData bunch distribution.
runTBTBunchDisDataBunchIndex = 350 355 360 365 370 375 380 385 390 395 400 405 410 415 420 425 430 435 440 445 450                      // bunch index to be printed

runTBTBunchPrintNum = 5                                        // data print in result.sdds -- average turn by turn and in TBTBunchDisData bunch distribution.
runTBTBunchDisDataBunchIndex = 0 111 222 334 445                      // bunch index to be printed

runTBTBunchAverData = TBTBunchAverData
runTBTBunchDisData  = TBTBunchDisData                         // only works in strong model that calsetting=2
runTBTBunchCavVolData = TBTBunchCavVolData                    // only works in strong model that calsetting=2
runTBTBunchHaissinski = TBTBunchHaissinski                    // only works in weak model calsetting=1 
!runTBTBunchLongTraj   = longPariTraj                          // only works in weak mode  calsetting=1, file name of the longitudinal phase trajectory 

runSynRadDampingFlag = 0                                      // only work for the transverse directoin, longitudinal is dealt in the RF cavity module                       
runBeamIonFlag = 0
runFIRBunchByBunchFeedbackFlag = 0
runLongRangeWake = 0
runShortRangeWake = 0                                           
runBBIFlag = 0                                                 // borad band impedance data read from files--frequency domain approaches. solver is not applied to code yet.  
&end




2022-04-07: benchmark the multi-turn-multi-bunch cases--(however even did not agree with prediction with single bunch multi-turn)
When working point less than 0, the mode \mu=1 always domintes. -- in one turn matrix tracking --only the fraction part of the tune matters.
To get the coupled mode growth rate. Ref. PRAB 18, 031001 2015, Maro, M. Eq. (24). deal with the turn by turn data within a window. severl steps-- not fixed it yet. 
(1) : get the fitting A_b and \theta_b of different bunches.  
(2) : solver the A_{\mu} and  \theta_{\mu} for each mode-- requres to sovle of linear matrix.  
(3) : A_{\mu} as function of turns represents the the mode variation   
another way is, to find out the growth rate at the fouier mode abs value. --- hopefully give the same results.


2022--04-12 still working on the coupled bunch instabilites. -- the growth rate for one bunch-multi-turn trakcing is not comparable with the theory prediction
2022--04-16 When the electron bunch curent is big.  The cavity feedback scheme used not can not ensure ideal bunch lengthing.   
2022--04-16 short range wake subroutine need to be benchmaked with other codes, in time domain, RW aggree with Haisskin solutions
2022--05-10 particle longitudinal, 



